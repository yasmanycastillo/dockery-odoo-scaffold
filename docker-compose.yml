version: '3.4'


x-odoo:
  &default-odoo
  tty: true  # Do not avoid json logging
  image: "${IMAGE}:devops-${ODOO_VERSION}"
  ports: ['80:8069', '8072:8072']
  secrets:
    - source: adminpwd
      target: /run/secrets/adminpwd
  volumes:
  # Named Data volumes
  - odoo-data:/var/lib/odoo-persist
  - odoo-backup:/var/lib/odoo-backup
  - odoo-testlogs:/var/lib/odoo-testlogs
  # Host paths (config)
  - .cfg-default.ini:/opt/odoo/cfg.d/01-default:ro
  - .cfg-custom.ini:/opt/odoo/cfg.d/02-custom:ro
  # Host paths (source)
  - ./src:/opt/odoo/addons/090:ro
  - ./vendor/odoo/cc/odoo:/opt/odoo/odoo:ro
  - ./vendor/odoo/cc/addons:/opt/odoo/addons/000:ro
  - ./vendor/odoo/ee:/opt/odoo/addons/001:ro

secrets:
  adminpwd:
    file: .adminpwd

volumes:
  odoo-data: {driver: local}
  odoo-backup: {driver: local}
  odoo-testlogs: {driver: local}
  psql: {driver: local}

services:

# ========================

  wdb:
    image: xoes/wdb-server
    ports: ['1984:1984']

# ------------------------

  postgres:
    image: 'postgres:alpine'
    # 5432 might be taken by a locally running instance
    ports: ['5433:5432']
    volumes: ['psql:/var/lib/postgresql/data']
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=postgres
    networks:
      default:
        aliases:
         - db

# ------------------------

  odoo:
    << : *default-odoo
    entrypoint: ['/entrypoint.sh', '--dev', 'wdb,reload,qweb,werkzeug,xml']
    command: []
    depends_on: ['postgres', 'wdb']

# ========================

  scaffold:
    << : *default-odoo
    user: "${COMPOSE_IMPERSONATION}"
    entrypoint: ['/entrypoint.sh', 'scaffold']
    command: []
    volumes:
    - ./src:/opt/odoo/addons/090

# ------------------------

  tests:
    << : *default-odoo
    depends_on: ['postgres', 'wdb']
    entrypoint: ['/entrypoint.sh', '--dev', 'wdb,qweb,werkzeug,xml', '--test-enable', '--stop-after-init', '--logfile', '/testlogs/']
    command: []

# ------------------------

  shell:
    << : *default-odoo
    depends_on: ['postgres', 'wdb']
    entrypoint: ['/entrypoint.sh', 'shell']
    command: []

# ------------------------

  migrate:
    << : *default-odoo
    depends_on: ['postgres', 'wdb']
    entrypoint: ['/entrypoint.sh', 'dodoo-migrator']
    command: []

# ------------------------

  initdb:
    << : *default-odoo
    depends_on: ['postgres', 'wdb']
    entrypoint: ['/entrypoint.sh', 'dodoo-initializer']
    command: []

# ------------------------

  load:
    << : *default-odoo
    depends_on: ['postgres', 'wdb']
    entrypoint: ['/entrypoint.sh', 'dodoo-loader']
    command: []

# ------------------------

  # translate:
  #   << : *default-odoo
  #   depends_on: ['postgres', 'wdb']
  #   entrypoint: ['/entrypoint.sh', 'dodoo-translator']
  #   command: []
